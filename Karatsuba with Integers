'''
Still fails due to multiplication of integers with different lengths? or is it odd length?

Compare to string implementation?

'''

def multiply(x, y):
    return x * y

def get_magnitude(x):
    assert x >= 0
    n = 0
    while x >= 1:
        x = x // 10
        n += 1
    return n

def split(num, mid):
    assert num >= 0

    if num < 10:
        return 0, num

    b = 0
    i = 0
    while  i < mid:
        # determine least significant digit
        dig = num % 10

        # update b
        b += dig * pow(10, i)

        # update a
        num = num // 10
        
        # update index
        i += 1

    return num, b

def karatsuba(x, y):
    # find length of x & y
    lx = get_magnitude(x)
    ly = get_magnitude(y)

    # guarantee that x is greater or equal magnitude
    if ly > lx:
        x, y = y, x
        lx, ly = ly, lx

    # base case
    if ly <= 1:
        return x * y

    # recursive case
    else:
        # find middle
        n = ly
        m = ly // 2

        # split x into a & b, y into c, & d
        # note that magnitude of b must equal magnitude of d
        # so count from least significant digit to most significant digit
        a, b = split(x, m)
        c, d = split(y, m)

        ac = karatsuba(a, c)
        bd = karatsuba(b, d)
        tmp = karatsuba(a+b, c+d)
        adplusbc = tmp - ac - bd 

        return ac * pow(10, n) + adplusbc * pow(10, m) + bd

x = 3141592653589793238462643383279502884197169399375105820974944592
y = 2718281828459045235360287471352662497757247093699959574966967627

x = 3141592653589793
y = 2718281828459045

slow = multiply(x, y)
fast = karatsuba(x, y)
print(slow, fast, slow == fast)
